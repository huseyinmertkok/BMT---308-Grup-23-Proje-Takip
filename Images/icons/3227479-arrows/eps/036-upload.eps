%!PS-Adobe-3.0 EPSF-3.0
%%Creator: cairo 1.16.0 (https://cairographics.org)
%%CreationDate: Wed Jul 15 12:06:41 2020
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 3
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
50 dict begin
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox: 0 0 384 384
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
q
169.5 44.992 m 150.164 44.992 l 157.918 13.969 l 159.062 9.352 157.195 
4.508 153.219 1.871 c 149.285 -0.734 144.098 -0.613 140.254 2.246 c 50.254
 69.746 l 44.25 74.238 44.258 83.254 50.254 87.742 c 140.254 155.242 l 144.098
 158.098 149.285 158.23 153.219 155.613 c 157.195 152.977 159.062 148.133
 157.918 143.52 c 150.164 112.492 l 169.5 112.492 l 200.523 112.492 225.75
 137.727 225.75 168.742 c 225.75 192.516 210.676 213.832 188.242 221.785
 c 183.758 223.379 180.75 227.617 180.75 232.387 c 180.75 278.98 l 180.75
 286.105 187.293 291.43 194.242 290 c 251.609 278.32 293.25 227.324 293.25
 168.742 c 293.25 100.508 237.727 44.992 169.5 44.992 c h
169.5 44.992 m W n
[0.750003 0 0 0.750003 0 0] concat
/CairoFunction
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0 0.709804 0.611765 ]
      /C1 [ 0.611765 1 0.67451 ]
      /N 1
   >>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 226.001007 386.976013 226.001007 0.008 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
q
372.75 270.742 m 305.25 270.742 l 299.031 270.742 294 275.773 294 281.992
 c 294 315.742 l 90 315.742 l 90 281.992 l 90 275.773 84.969 270.742 78.75
 270.742 c 11.25 270.742 l 5.031 270.742 0 275.773 0 281.992 c 0 372.742
 l 0 378.961 5.031 383.992 12 383.992 c 373.5 383.992 l 378.969 383.992 
384 378.961 384 372.742 c 384 281.992 l 384 275.773 378.969 270.742 372.75
 270.742 c h
372.75 270.742 m W n
[0.750003 0 0 0.750003 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.764706 1 0.909804 ]
      /C1 [ 0.941176 1 0.956863 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.941176 1 0.956863 ]
      /C1 [ 0.941176 1 0.956863 ]
      /N 1
   >>
   ]
   /Bounds [ 0.9973 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 255.998993 511.98999 255.998993 360.98999 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
Q Q
showpage
%%Trailer
end
%%EOF
