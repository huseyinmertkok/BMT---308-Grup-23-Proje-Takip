%!PS-Adobe-3.0 EPSF-3.0
%%Creator: cairo 1.16.0 (https://cairographics.org)
%%CreationDate: Wed Jul 15 12:06:09 2020
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 3
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
50 dict begin
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox: 0 0 384 384
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
q
371.141 0.109 m 259.762 16.086 l 255.059 16.766 251.277 20.336 250.336 
25.004 c 249.391 29.676 251.5 34.434 255.586 36.883 c 283.051 53.316 l 53.312
 283.043 l 36.879 255.59 l 34.461 251.523 29.824 249.461 25.012 250.34 c
 20.355 251.281 16.773 255.051 16.09 259.773 c 0.117 371.156 l -0.949 378.551
 5.406 384.93 12.863 383.887 c 124.242 367.914 l 128.945 367.234 132.723
 363.664 133.668 358.992 c 134.613 354.324 132.504 349.566 128.414 347.117
 c 100.949 330.68 l 330.688 100.953 l 347.125 128.41 l 349.543 132.484 354.223
 134.582 358.988 133.66 c 363.648 132.715 367.227 128.945 367.91 124.223
 c 383.883 12.844 l 384.926 5.609 378.797 -0.934 371.141 0.109 c h
371.141 0.109 m W n
[0.75 0 0 0.75 0 0] concat
/CairoFunction
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.992157 0.34902 0 ]
      /C1 [ 1 0.870588 0 ]
      /N 1
   >>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 256 512 256 0 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
Q Q
showpage
%%Trailer
end
%%EOF
